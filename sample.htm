<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\sample.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\sample.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Mon Jan 29 11:17:06 2024
<BR><P>
<H3>Maximum Stack Usage =        564 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
RIT_IRQHandler &rArr; QUORIDORmuoviMuro &rArr; GRAPHcheckPosizioneMuro &rArr; GRAPHcheckPercorsoGiocatori &rArr; GRAPHisPathExists &rArr; isPathExistsDFS &rArr;  isPathExistsDFS (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[106]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">DebugMon_Handler</a><BR>
 <LI><a href="#[b]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">PendSV_Handler</a><BR>
 <LI><a href="#[c]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">SysTick_Handler</a><BR>
 <LI><a href="#[23]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">ADC_IRQHandler</a><BR>
 <LI><a href="#[c2]">QUORIDORgiocaMossaExternal</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[66]">QUORIDORgiocaTurno</a><BR>
 <LI><a href="#[66]">QUORIDORgiocaTurno</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[66]">QUORIDORgiocaTurno</a><BR>
 <LI><a href="#[97]">isPathExistsDFS</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[97]">isPathExistsDFS</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[23]">ADC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[24]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2f]">CANActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[26]">CAN_IRQHandler</a> from irq_can.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[27]">DMA_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1f]">EINT0_IRQHandler</a> from irq_button.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[20]">EINT1_IRQHandler</a> from irq_button.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[21]">EINT2_IRQHandler</a> from irq_button.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[22]">EINT3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[29]">ENET_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[17]">I2C0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[18]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[19]">I2C2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[28]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2b]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1d]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2d]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[16]">PWM1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2c]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2a]">RIT_IRQHandler</a> from irq_rit.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1e]">RTC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1a]">SPI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1b]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1c]">SSP1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[e]">TIMER0_IRQHandler</a> from irq_timer.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[f]">TIMER1_IRQHandler</a> from irq_timer.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[10]">TIMER2_IRQHandler</a> from irq_timer.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[11]">TIMER3_IRQHandler</a> from irq_timer.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[12]">UART0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[13]">UART1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[14]">UART2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[15]">UART3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2e]">USBActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[25]">USB_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[d]">WDT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[33]">__main</a> from __main.o(!!!main) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[32]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[31]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[33]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[34]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[36]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[108]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[109]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[10a]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[10b]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[10c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[37]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[102]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[10d]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[3c]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[10e]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[10f]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[110]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[111]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[112]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[113]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[114]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[115]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[116]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[117]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[118]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[119]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[11a]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[11b]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[11c]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[11d]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[11e]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[11f]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[120]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[121]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[122]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[41]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[123]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[124]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[125]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[126]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[127]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[128]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[129]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[12a]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[35]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[12b]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[39]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3b]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[12c]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[3d]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; CAN_Init &rArr; CAN_wrFilter
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[12d]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[107]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[40]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[12e]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[42]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[106]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3e]"></a>main</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, sample.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = main &rArr; CAN_Init &rArr; CAN_wrFilter
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;joystick_init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_RIT
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_RIT
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Initialization
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[1f]"></a>EINT0_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, irq_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EINT1_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, irq_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EINT2_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, irq_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[12f]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[130]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[131]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>SystemInit</STRONG> (Thumb, 552 bytes, Stack size 0 bytes, system_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>BUTTON_init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, lib_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BUTTON_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>RIT_IRQHandler</STRONG> (Thumb, 1860 bytes, Stack size 48 bytes, irq_rit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 564 + Unknown Stack Size
<LI>Call Chain = RIT_IRQHandler &rArr; QUORIDORmuoviMuro &rArr; GRAPHcheckPosizioneMuro &rArr; GRAPHcheckPercorsoGiocatori &rArr; GRAPHisPathExists &rArr; isPathExistsDFS &rArr;  isPathExistsDFS (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORupdateBtnMenu
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORsceltaMenu
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORruotaMuro
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORrimuoviMuro
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORrimuoviMosseGiocatore
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORresetMosseNPC
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORreset
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviMuro
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviGiocatore
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORisPartitaAttiva
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORisInit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORinit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORdisegnaMenu
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORconfermaMuro
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORcheckWin
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuro
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PARTITAsetMossaPending
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PARTITAsetModalita
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PARTITAis_NPC_up
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PARTITAis_NPC_right
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PARTITAis_NPC_left
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PARTITAis_NPC_down
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PARTITAgetTurnoID
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PARTITAgetMossaPending
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PARTITAgetMossaDiagonaleAttiva
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PARTITAgetModalita
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROisVertical
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetVertice1
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetLastMuro
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAcrea_return
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREisNPC
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREisExternalBoard
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetNumeroMuri
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANhandshakeClear
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANQsendMossa
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>enable_RIT</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lib_rit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[132]"></a>disable_RIT</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lib_rit.o(.text), UNUSED)

<P><STRONG><a name="[133]"></a>reset_RIT</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lib_rit.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>init_RIT</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, lib_rit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>joystick_init</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, lib_joystick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c1]"></a>joystick_disable</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, lib_joystick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORdisabilitaComandiGiocatore
</UL>

<P><STRONG><a name="[a5]"></a>joystick_enable</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, lib_joystick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORabilitaComandiGiocatore
</UL>

<P><STRONG><a name="[75]"></a>GetASCIICode</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, asciilib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetASCIICode
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutChar
</UL>

<P><STRONG><a name="[4a]"></a>LCD_Initialization</STRONG> (Thumb, 12014 bytes, Stack size 24 bytes, glcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_Initialization
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_delay
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>LCD_Clear</STRONG> (Thumb, 1520 bytes, Stack size 24 bytes, glcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_Clear &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaScacchiera
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaMenuSelBoard
</UL>

<P><STRONG><a name="[7c]"></a>LCD_GetPoint</STRONG> (Thumb, 994 bytes, Stack size 40 bytes, glcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_BGR2RGB
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_delay
</UL>

<P><STRONG><a name="[7e]"></a>LCD_SetPoint</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, glcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutChar
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>

<P><STRONG><a name="[7f]"></a>LCD_DrawLine</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, glcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaTimer
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaMenuSelBoard
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIstampaMessaggioVincitore
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaQuadrato
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaNumeroMuriGiocatori
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaMuro
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGiocatore
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIcancellaMuro
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaQuadratoBTN
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaGiocatoreConCoordinate
</UL>

<P><STRONG><a name="[80]"></a>PutChar</STRONG> (Thumb, 100 bytes, Stack size 56 bytes, glcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = PutChar &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetASCIICode
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaNumeroMuriGiocatore
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Text
</UL>

<P><STRONG><a name="[81]"></a>GUI_Text</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, glcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_Text &rArr; PutChar &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaMenuSelBoard
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIstampaTimer
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIstampaMessaggioVincitore
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaNumeroMuriGiocatori
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaBTNmenu1
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaBTNmenu2
</UL>

<P><STRONG><a name="[e]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, irq_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = TIMER0_IRQHandler &rArr; GUI_Text &rArr; PutChar &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_timer
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Text
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, irq_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = TIMER1_IRQHandler &rArr; QUORIDORgiocaTurno &rArr;  QUORIDORgiocaTurno (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgetTimer
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORdecrementTimer
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, irq_timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, irq_timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d6]"></a>enable_timer</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lib_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardHuman
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardNPC
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsHuman
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsNPC
</UL>

<P><STRONG><a name="[82]"></a>disable_timer</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lib_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORreset
</UL>

<P><STRONG><a name="[b5]"></a>reset_timer</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, lib_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsHuman
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsNPC
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORreset
</UL>

<P><STRONG><a name="[49]"></a>init_timer</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, lib_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = init_timer &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d9]"></a>GIOCATOREcrea</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, giocatore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GIOCATOREcrea
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardHuman
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardNPC
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsHuman
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsNPC
</UL>

<P><STRONG><a name="[134]"></a>GIOCATOREreset</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, giocatore.o(.text), UNUSED)

<P><STRONG><a name="[ed]"></a>GIOCATOREaddMossa</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, giocatore.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAcreaVoid
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAcrea
</UL>

<P><STRONG><a name="[af]"></a>GIOCATOREgetColore</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, giocatore.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
</UL>

<P><STRONG><a name="[88]"></a>GIOCATOREgetNumMosse</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, giocatore.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetLastMossa
</UL>

<P><STRONG><a name="[ea]"></a>GIOCATOREgetNumMuriPiazzati</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, giocatore.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaNumeroMuriGiocatore
</UL>

<P><STRONG><a name="[56]"></a>GIOCATOREgetPosizione</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, giocatore.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NPCCONTROLLERinserireMuro
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIrimuoviGiocatore
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGiocatore
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardHuman
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardNPC
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsHuman
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsNPC
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORturnoNonGiocato
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHgetNextPossibleMoveNPC
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATORE_NPC_getBestDirection
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORruotaMuro
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORrimuoviMosseGiocatore
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviMuro
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviGiocatore
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORcheckWin
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuro
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[b2]"></a>GIOCATOREsetPosizione</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, giocatore.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviGiocatore
</UL>

<P><STRONG><a name="[6d]"></a>GIOCATOREgetNumeroMuri</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, giocatore.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuroNPC
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuro
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[87]"></a>GIOCATOREgetLastMossa</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, giocatore.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAgetLastMossa
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetNumMosse
</UL>

<P><STRONG><a name="[f0]"></a>GIOCATOREaddMuro</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, giocatore.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROcrea
</UL>

<P><STRONG><a name="[f1]"></a>GIOCATOREremoveMuro</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, giocatore.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROrimuoviLastMuro
</UL>

<P><STRONG><a name="[5f]"></a>GIOCATOREisNPC</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, giocatore.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[8a]"></a>GIOCATORE_NPC_getBestDirection</STRONG> (Thumb, 318 bytes, Stack size 72 bytes, giocatore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = GIOCATORE_NPC_getBestDirection &rArr; GRAPHgetMosseValide &rArr; GRAPHinserisciPerimetro &rArr; EDGEcreate
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHgetMosseValide
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
</UL>

<P><STRONG><a name="[5e]"></a>GIOCATOREisExternalBoard</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, giocatore.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[90]"></a>GRAPHreset</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, graph.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHload
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORreset
</UL>

<P><STRONG><a name="[8c]"></a>GRAPHinserisciGiocatore</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GRAPHinserisciGiocatore &rArr; EDGEcreate
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insertEdge
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDGEcreate
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardHuman
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardNPC
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsHuman
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsNPC
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORturnoNonGiocato
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHload
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviGiocatore
</UL>

<P><STRONG><a name="[8f]"></a>GRAPHload</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = GRAPHload &rArr; GRAPHinserisciGiocatore &rArr; EDGEcreate
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHinserisciGiocatore
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHreset
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardHuman
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardNPC
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsHuman
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsNPC
</UL>

<P><STRONG><a name="[91]"></a>GRAPHinsertEdge</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, graph.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insertEdge
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDGEcreate
</UL>

<P><STRONG><a name="[92]"></a>GRAPHremoveEdge</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, graph.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removeEdge
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDGEcreate
</UL>

<P><STRONG><a name="[135]"></a>EDGEtoccaLatoSinistro</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, graph.o(.text), UNUSED)

<P><STRONG><a name="[136]"></a>EDGEtoccaLatoDestro</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, graph.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>EDGEtoccaLatoAlto</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, graph.o(.text), UNUSED)

<P><STRONG><a name="[138]"></a>EDGEtoccaLatoBasso</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, graph.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>GRAPHrimuoviPerimetro</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GRAPHrimuoviPerimetro &rArr; EDGEcreate
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removeEdge
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDGEcreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHgetMosseValide
</UL>

<P><STRONG><a name="[95]"></a>GRAPHinserisciPerimetro</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GRAPHinserisciPerimetro &rArr; EDGEcreate
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insertEdge
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDGEcreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHgetMosseValide
</UL>

<P><STRONG><a name="[8b]"></a>GRAPHgetMosseValide</STRONG> (Thumb, 1102 bytes, Stack size 56 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = GRAPHgetMosseValide &rArr; GRAPHinserisciPerimetro &rArr; EDGEcreate
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHinserisciPerimetro
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHrimuoviPerimetro
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORturnoNonGiocato
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHgetNextPossibleMoveNPC
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATORE_NPC_getBestDirection
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORrimuoviMosseGiocatore
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviGiocatore
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
</UL>

<P><STRONG><a name="[b9]"></a>GRAPHgetVerticeDirezione</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, graph.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviGiocatore
</UL>

<P><STRONG><a name="[ba]"></a>GRAPHgetVerticeDirezioneConSalto</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, graph.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviGiocatore
</UL>

<P><STRONG><a name="[96]"></a>GRAPHrimuoviGiocatore</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GRAPHrimuoviGiocatore &rArr; EDGEcreate
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;removeEdge
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDGEcreate
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviGiocatore
</UL>

<P><STRONG><a name="[b8]"></a>GRAPHverticeToccaLatoSuperiore</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, graph.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORcheckWin
</UL>

<P><STRONG><a name="[b6]"></a>GRAPHverticeToccaLatoInferiore</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, graph.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORcheckWin
</UL>

<P><STRONG><a name="[9f]"></a>GRAPHrimuoviMuro</STRONG> (Thumb, 434 bytes, Stack size 8 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GRAPHrimuoviMuro
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHcheckPosizioneMuro
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHcheckPercorsoGiocatori
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORrimuoviMuro
</UL>

<P><STRONG><a name="[98]"></a>posCorretta</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, graph.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isPathExistsDFS
</UL>

<P><STRONG><a name="[97]"></a>isPathExistsDFS</STRONG> (Thumb, 380 bytes, Stack size 36 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + In Cycle
<LI>Call Chain = isPathExistsDFS &rArr;  isPathExistsDFS (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isPathExistsDFS
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;posCorretta
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHisPathExists
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isPathExistsDFS
</UL>

<P><STRONG><a name="[99]"></a>GRAPHisPathExists</STRONG> (Thumb, 32 bytes, Stack size 272 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = GRAPHisPathExists &rArr; isPathExistsDFS &rArr;  isPathExistsDFS (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isPathExistsDFS
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHcheckPercorsoGiocatori
</UL>

<P><STRONG><a name="[9e]"></a>GRAPHaggiungiMuro</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GRAPHaggiungiMuro
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuroNPC
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHcheckPosizioneMuro
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHcheckPercorsoGiocatori
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORruotaMuro
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviMuro
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuro
</UL>

<P><STRONG><a name="[9b]"></a>GRAPHcheckPercorsoGiocatori</STRONG> (Thumb, 244 bytes, Stack size 96 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = GRAPHcheckPercorsoGiocatori &rArr; GRAPHisPathExists &rArr; isPathExistsDFS &rArr;  isPathExistsDFS (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROcreaSenzaAggiungere
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHaggiungiMuro
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHisPathExists
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHrimuoviMuro
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROisVertical
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHcheckPosizioneMuro
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHgetPosRandomValidMuro
</UL>

<P><STRONG><a name="[a0]"></a>GRAPHgetPosRandomValidMuro</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = GRAPHgetPosRandomValidMuro &rArr; GRAPHcheckPercorsoGiocatori &rArr; GRAPHisPathExists &rArr; isPathExistsDFS &rArr;  isPathExistsDFS (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHcheckPercorsoGiocatori
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuro
</UL>

<P><STRONG><a name="[a1]"></a>GRAPHcheckPosizioneMuro</STRONG> (Thumb, 222 bytes, Stack size 48 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = GRAPHcheckPosizioneMuro &rArr; GRAPHcheckPercorsoGiocatori &rArr; GRAPHisPathExists &rArr; isPathExistsDFS &rArr;  isPathExistsDFS (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROcreaSenzaAggiungere
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHcheckPercorsoGiocatori
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHaggiungiMuro
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHrimuoviMuro
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROisVertical
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORruotaMuro
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviMuro
</UL>

<P><STRONG><a name="[a2]"></a>GRAPHgetNextPossibleMoveNPC</STRONG> (Thumb, 100 bytes, Stack size 56 bytes, graph.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHgetMosseValide
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
</UL>

<P><STRONG><a name="[139]"></a>isMuroCorrente</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, quoridor.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>QUORIDORabilitaComandiGiocatore</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = QUORIDORabilitaComandiGiocatore
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;joystick_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORinit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
</UL>

<P><STRONG><a name="[54]"></a>QUORIDORresetMosseNPC</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORinit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[a6]"></a>QUORIDORresetConfermaNPC</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORinit
</UL>

<P><STRONG><a name="[69]"></a>QUORIDORinit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = QUORIDORinit &rArr; QUORIDORabilitaComandiGiocatore
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODALITAinit
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUinit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORresetConfermaNPC
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORabilitaComandiGiocatore
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORresetMosseNPC
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[83]"></a>QUORIDORdecrementTimer</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = QUORIDORdecrementTimer &rArr; GUIstampaTimer &rArr; GUI_Text &rArr; PutChar &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIstampaTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[5d]"></a>QUORIDORconfermaMuro</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = QUORIDORconfermaMuro &rArr; GUIdisegnaMuro &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAcrea
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaMuro
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROisVertical
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetVertice1
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetLastMuro
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[65]"></a>QUORIDORswapTurno</STRONG> (Thumb, 662 bytes, Stack size 40 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = QUORIDORswapTurno &rArr; QUORIDORconfermaMuro &rArr; GUIdisegnaMuro &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NPCCONTROLLERmossaAvversario
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROrimuoviLastMuro
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAcreaVoid
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAcrea
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIrimuoviMosseGiocatore
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaNumeroMuriGiocatori
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaMuro
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGiocatore
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHrimuoviMuro
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHrimuoviGiocatore
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHinserisciGiocatore
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHgetMosseValide
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREsetPosizione
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetColore
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORconfermaMuro
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROisVertical
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetVertice1
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetLastMuro
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREisNPC
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[68]"></a>QUORIDORreset</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = QUORIDORreset
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAinit
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODALITAinit
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHreset
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_timer
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[67]"></a>QUORIDORcheckWin</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = QUORIDORcheckWin &rArr; GUIstampaMessaggioVincitore &rArr; GUI_Text &rArr; PutChar &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIstampaMessaggioVincitore
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHverticeToccaLatoInferiore
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHverticeToccaLatoSuperiore
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[53]"></a>PARTITAgetModalita</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[57]"></a>QUORIDORmuoviGiocatore</STRONG> (Thumb, 638 bytes, Stack size 24 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = QUORIDORmuoviGiocatore &rArr; GUIdisegnaGiocatore &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaQuadrato
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGiocatore
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHrimuoviGiocatore
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHgetVerticeDirezioneConSalto
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHgetVerticeDirezione
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHinserisciGiocatore
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHgetMosseValide
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREsetPosizione
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[bc]"></a>QUORIDORaggiungiMuroNPC</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = QUORIDORaggiungiMuroNPC &rArr; GUIdisegnaNumeroMuriGiocatori &rArr; GUIdisegnaNumeroMuriGiocatore &rArr; PutChar &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROruotaMuro
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROcrea
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaNumeroMuriGiocatori
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaMuro
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHaggiungiMuro
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetLastMuro
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetNumeroMuri
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
</UL>

<P><STRONG><a name="[55]"></a>PARTITAgetTurnoID</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[bf]"></a>QUORIDORdisabilitaComandiGiocatore</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = QUORIDORdisabilitaComandiGiocatore
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;joystick_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
</UL>

<P><STRONG><a name="[c2]"></a>QUORIDORgiocaMossaExternal</STRONG> (Thumb, 430 bytes, Stack size 72 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + In Cycle
<LI>Call Chain = QUORIDORgiocaMossaExternal &rArr;  QUORIDORgiocaTurno (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROcrea
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAisVoid
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAisVerticale
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAisPlayerMode
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAgetPosizione
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAgetPlayerID
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIrimuoviMosseGiocatore
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIrimuoviGiocatore
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaNumeroMuriGiocatori
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaMuro
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGiocatore
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHaggiungiMuro
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHrimuoviGiocatore
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHinserisciGiocatore
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHgetMosseValide
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREsetPosizione
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORreset
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORconfermaMuro
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORcheckWin
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PARTITAgetModalita
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetLastMuro
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
</UL>

<P><STRONG><a name="[70]"></a>PARTITAsetModalita</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[66]"></a>QUORIDORgiocaTurno</STRONG> (Thumb, 644 bytes, Stack size 88 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + In Cycle
<LI>Call Chain = QUORIDORgiocaTurno &rArr;  QUORIDORgiocaTurno (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NPCCONTROLLERinserireMuro
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODALITAgetPlayerMode
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODALITAgetGameMode
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIrimuoviMosseGiocatore
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaNumeroMuriGiocatori
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaMosseGiocatore
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGiocatore
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANQreadMossa
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORdisabilitaComandiGiocatore
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuroNPC
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORabilitaComandiGiocatore
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHgetMosseValide
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATORE_NPC_getBestDirection
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetColore
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORresetMosseNPC
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORreset
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviGiocatore
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORconfermaMuro
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORcheckWin
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PARTITAsetModalita
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PARTITAgetTurnoID
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PARTITAgetModalita
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAcrea_return
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREisNPC
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREisExternalBoard
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANQsendMossa
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardHuman
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardNPC
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsHuman
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsNPC
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[71]"></a>QUORIDORrimuoviMosseGiocatore</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = QUORIDORrimuoviMosseGiocatore &rArr; GUIrimuoviMosseGiocatore &rArr; GUIdisegnaQuadrato &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIrimuoviMosseGiocatore
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHgetMosseValide
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[84]"></a>QUORIDORgetTimer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[ce]"></a>QUORIDORturnoNonGiocato</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, quoridor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIrimuoviMosseGiocatore
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHinserisciGiocatore
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHgetMosseValide
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
</UL>

<P><STRONG><a name="[eb]"></a>PARTITAgetTurnoGUI</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGrafica
</UL>

<P><STRONG><a name="[73]"></a>QUORIDORrimuoviMuro</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = QUORIDORrimuoviMuro &rArr; GUIdisegnaNumeroMuriGiocatori &rArr; GUIdisegnaNumeroMuriGiocatore &rArr; PutChar &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROrimuoviLastMuro
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaNumeroMuriGiocatori
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIcancellaMuro
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHrimuoviMuro
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROisVertical
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetVertice1
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetLastMuro
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORruotaMuro
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviMuro
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[72]"></a>QUORIDORaggiungiMuro</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = QUORIDORaggiungiMuro &rArr; GRAPHgetPosRandomValidMuro &rArr; GRAPHcheckPercorsoGiocatori &rArr; GRAPHisPathExists &rArr; isPathExistsDFS &rArr;  isPathExistsDFS (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROcrea
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaNumeroMuriGiocatori
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaMuro
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHgetPosRandomValidMuro
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHaggiungiMuro
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetLastMuro
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetNumeroMuri
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[d0]"></a>muroNonPresente</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, quoridor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROmuroPresente
</UL>

<P><STRONG><a name="[74]"></a>QUORIDORruotaMuro</STRONG> (Thumb, 232 bytes, Stack size 56 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = QUORIDORruotaMuro &rArr; GRAPHcheckPosizioneMuro &rArr; GRAPHcheckPercorsoGiocatori &rArr; GRAPHisPathExists &rArr; isPathExistsDFS &rArr;  isPathExistsDFS (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROsiSovrappone
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROruotaMuro
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROmuroPresente
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetVertice2
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROcrea
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaNumeroMuriGiocatori
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaMuro
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROcreaSenzaAggiungere
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHcheckPosizioneMuro
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHaggiungiMuro
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORrimuoviMuro
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROisVertical
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetVertice1
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetLastMuro
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[13a]"></a>PARTITAgetGiocatore1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, quoridor.o(.text), UNUSED)

<P><STRONG><a name="[13b]"></a>PARTITAgetGiocatore2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, quoridor.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>QUORIDORisPartitaAttiva</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[59]"></a>QUORIDORmuoviMuro</STRONG> (Thumb, 306 bytes, Stack size 64 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = QUORIDORmuoviMuro &rArr; GRAPHcheckPosizioneMuro &rArr; GRAPHcheckPercorsoGiocatori &rArr; GRAPHisPathExists &rArr; isPathExistsDFS &rArr;  isPathExistsDFS (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROsiSovrappone
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROmuroPresente
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetVertice2
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROcrea
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaNumeroMuriGiocatori
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaMuro
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROcreaSenzaAggiungere
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHcheckPosizioneMuro
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHaggiungiMuro
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORrimuoviMuro
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROisVertical
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetVertice1
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetLastMuro
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[6f]"></a>PARTITAsetMossaPending</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[6e]"></a>PARTITAgetMossaPending</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[4e]"></a>PARTITAgetMossaDiagonaleAttiva</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[6b]"></a>QUORIDORdisegnaMenu</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = QUORIDORdisegnaMenu &rArr; MENUdisegnaMenuSelBoard &rArr; MENUdisegnaBTNmenu1 &rArr; MENUdisegnaGiocatoreConCoordinate &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaMenuSelBoard
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[5a]"></a>QUORIDORisInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[d5]"></a>QUORIDORstartTwoBoardsNPC</STRONG> (Thumb, 180 bytes, Stack size 80 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = QUORIDORstartTwoBoardsNPC &rArr; QUORIDORgiocaTurno &rArr;  QUORIDORgiocaTurno (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROinitMuri
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAinit
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODALITAsetPlayerType
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODALITAsetGameMode
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGrafica
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGiocatore
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANQhandshake
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHload
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHinserisciGiocatore
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREcrea
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_timer
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_timer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstart
</UL>

<P><STRONG><a name="[dd]"></a>QUORIDORstartTwoBoardsHuman</STRONG> (Thumb, 190 bytes, Stack size 80 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = QUORIDORstartTwoBoardsHuman &rArr; QUORIDORgiocaTurno &rArr;  QUORIDORgiocaTurno (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROinitMuri
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAinit
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODALITAsetPlayerType
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODALITAsetGameMode
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGrafica
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGiocatore
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANQhandshake
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHload
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHinserisciGiocatore
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREcrea
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_timer
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_timer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstart
</UL>

<P><STRONG><a name="[de]"></a>QUORIDORstartSingleBoardNPC</STRONG> (Thumb, 174 bytes, Stack size 80 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = QUORIDORstartSingleBoardNPC &rArr; QUORIDORgiocaTurno &rArr;  QUORIDORgiocaTurno (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NPCControllerInit
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROinitMuri
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAinit
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODALITAsetPlayerType
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODALITAsetGameMode
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGrafica
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGiocatore
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHload
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHinserisciGiocatore
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREcrea
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_timer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstart
</UL>

<P><STRONG><a name="[e0]"></a>QUORIDORstartSingleBoardHuman</STRONG> (Thumb, 168 bytes, Stack size 80 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = QUORIDORstartSingleBoardHuman &rArr; QUORIDORgiocaTurno &rArr;  QUORIDORgiocaTurno (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROinitMuri
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAinit
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODALITAsetPlayerType
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODALITAsetGameMode
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGrafica
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGiocatore
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHload
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHinserisciGiocatore
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREcrea
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_timer
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstart
</UL>

<P><STRONG><a name="[e1]"></a>QUORIDORstart</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = QUORIDORstart &rArr; QUORIDORstartSingleBoardHuman &rArr; QUORIDORgiocaTurno &rArr;  QUORIDORgiocaTurno (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODALITAgetPlayerMode
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODALITAgetGameMode
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardHuman
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardNPC
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsHuman
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsNPC
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORsceltaMenu
</UL>

<P><STRONG><a name="[5c]"></a>QUORIDORsceltaMenu</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = QUORIDORsceltaMenu &rArr; QUORIDORstart &rArr; QUORIDORstartSingleBoardHuman &rArr; QUORIDORgiocaTurno &rArr;  QUORIDORgiocaTurno (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODALITAsetPlayerType
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODALITAsetGameMode
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUgetPosCursore
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaMenuSelBoard
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstart
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[5b]"></a>QUORIDORupdateBtnMenu</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, quoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = QUORIDORupdateBtnMenu &rArr; MENUsetPosCursore &rArr; MENUdisegnaBTNmenu1 &rArr; MENUdisegnaGiocatoreConCoordinate &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUsetPosCursore
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[13c]"></a>QUORIDORenableNPCdirection</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, quoridor.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>PARTITAis_NPC_up</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[58]"></a>PARTITAis_NPC_down</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[50]"></a>PARTITAis_NPC_left</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[51]"></a>PARTITAis_NPC_right</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[13d]"></a>QUORIDORconfirmNPCdirection</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, quoridor.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>PARTITAis_NPC_confirmed</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, quoridor.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>GUIdisegnaQuadrato</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, quoridorgui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUIdisegnaQuadrato &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STgetVerticeY
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STgetVerticeX
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaScacchiera
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIrimuoviMosseGiocatore
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIrimuoviGiocatore
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaMosseGiocatore
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviGiocatore
</UL>

<P><STRONG><a name="[e6]"></a>GUIdisegnaScacchiera</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, quoridorgui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUIdisegnaScacchiera &rArr; GUIdisegnaQuadrato &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaQuadrato
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGrafica
</UL>

<P><STRONG><a name="[a9]"></a>GUIstampaTimer</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, quoridorgui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = GUIstampaTimer &rArr; GUI_Text &rArr; PutChar &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Text
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaTimer
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORdecrementTimer
</UL>

<P><STRONG><a name="[e8]"></a>GUIdisegnaTimer</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, quoridorgui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = GUIdisegnaTimer &rArr; GUIstampaTimer &rArr; GUI_Text &rArr; PutChar &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIstampaTimer
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGrafica
</UL>

<P><STRONG><a name="[e9]"></a>GUIdisegnaNumeroMuriGiocatore</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, quoridorgui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUIdisegnaNumeroMuriGiocatore &rArr; PutChar &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetNumMuriPiazzati
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaNumeroMuriGiocatori
</UL>

<P><STRONG><a name="[ad]"></a>GUIdisegnaNumeroMuriGiocatori</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, quoridorgui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUIdisegnaNumeroMuriGiocatori &rArr; GUIdisegnaNumeroMuriGiocatore &rArr; PutChar &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaNumeroMuriGiocatore
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Text
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGrafica
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuroNPC
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORruotaMuro
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORrimuoviMuro
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviMuro
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuro
</UL>

<P><STRONG><a name="[da]"></a>GUIdisegnaGrafica</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, quoridorgui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = GUIdisegnaGrafica &rArr; GUIdisegnaTimer &rArr; GUIstampaTimer &rArr; GUI_Text &rArr; PutChar &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaTimer
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaScacchiera
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaNumeroMuriGiocatori
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PARTITAgetTurnoGUI
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardHuman
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardNPC
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsHuman
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsNPC
</UL>

<P><STRONG><a name="[b0]"></a>GUIdisegnaGiocatore</STRONG> (Thumb, 638 bytes, Stack size 56 bytes, quoridorgui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUIdisegnaGiocatore &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STgetVerticeY
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STgetVerticeX
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardHuman
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardNPC
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsHuman
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsNPC
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviGiocatore
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
</UL>

<P><STRONG><a name="[c9]"></a>GUIdisegnaMosseGiocatore</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, quoridorgui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUIdisegnaMosseGiocatore &rArr; GUIdisegnaQuadrato &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaQuadrato
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
</UL>

<P><STRONG><a name="[ae]"></a>GUIrimuoviMosseGiocatore</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, quoridorgui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUIrimuoviMosseGiocatore &rArr; GUIdisegnaQuadrato &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaQuadrato
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORturnoNonGiocato
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORrimuoviMosseGiocatore
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
</UL>

<P><STRONG><a name="[c8]"></a>GUIrimuoviGiocatore</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, quoridorgui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUIrimuoviGiocatore &rArr; GUIdisegnaQuadrato &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaQuadrato
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
</UL>

<P><STRONG><a name="[b7]"></a>GUIstampaMessaggioVincitore</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, quoridorgui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUIstampaMessaggioVincitore &rArr; GUI_Text &rArr; PutChar &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Text
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORcheckWin
</UL>

<P><STRONG><a name="[aa]"></a>GUIdisegnaMuro</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, quoridorgui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUIdisegnaMuro &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STgetVerticeY
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STgetVerticeX
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROorientamento
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetVertice2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetVertice1
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuroNPC
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORruotaMuro
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviMuro
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORconfermaMuro
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuro
</UL>

<P><STRONG><a name="[cf]"></a>GUIcancellaMuro</STRONG> (Thumb, 184 bytes, Stack size 48 bytes, quoridorgui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUIcancellaMuro &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STgetVerticeY
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STgetVerticeX
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROorientamento
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetVertice2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetVertice1
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORrimuoviMuro
</UL>

<P><STRONG><a name="[ab]"></a>MOSSAcrea</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, mossa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MOSSAcrea
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STgetVerticeY
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STgetVerticeX
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREaddMossa
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORconfermaMuro
</UL>

<P><STRONG><a name="[b3]"></a>MOSSAcreaVoid</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, mossa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MOSSAcreaVoid
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREaddMossa
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
</UL>

<P><STRONG><a name="[89]"></a>MOSSAgetLastMossa</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mossa.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetLastMossa
</UL>

<P><STRONG><a name="[b4]"></a>MOSSAinit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mossa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardHuman
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardNPC
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsHuman
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsNPC
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORreset
</UL>

<P><STRONG><a name="[13f]"></a>MOSSAgetMossaHandshake</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mossa.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>MOSSAgetPlayerID</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, mossa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MOSSAgetPlayerID
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANQsendMossa
</UL>

<P><STRONG><a name="[c5]"></a>MOSSAisPlayerMode</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, mossa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MOSSAisPlayerMode
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAisVoid
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANQsendMossa
</UL>

<P><STRONG><a name="[c6]"></a>MOSSAisVerticale</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, mossa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MOSSAisVerticale
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAisVoid
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANQsendMossa
</UL>

<P><STRONG><a name="[ee]"></a>MOSSA_da_XY_2_posizione</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, mossa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAgetPosizione
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANQreadMossa
</UL>

<P><STRONG><a name="[c7]"></a>MOSSAgetPosizione</STRONG> (Thumb, 24 bytes, Stack size 28 bytes, mossa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MOSSAgetPosizione
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSA_da_XY_2_posizione
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANQsendMossa
</UL>

<P><STRONG><a name="[ef]"></a>MOSSA_da_posizione_2_XY</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, mossa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MOSSA_da_posizione_2_XY
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAcrea_return
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANQsendMossa
</UL>

<P><STRONG><a name="[63]"></a>MOSSAcrea_return</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, mossa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = MOSSAcrea_return &rArr; MOSSA_da_posizione_2_XY
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSA_da_posizione_2_XY
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANQreadMossa
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[c3]"></a>MOSSAisVoid</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, mossa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MOSSAisVoid &rArr; MOSSAisVerticale
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAisVerticale
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAisPlayerMode
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
</UL>

<P><STRONG><a name="[bd]"></a>MUROcrea</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, muro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MUROcrea
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREaddMuro
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuroNPC
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORruotaMuro
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviMuro
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuro
</UL>

<P><STRONG><a name="[d8]"></a>MUROinitMuri</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, muro.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardHuman
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardNPC
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsHuman
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsNPC
</UL>

<P><STRONG><a name="[ac]"></a>MUROrimuoviLastMuro</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, muro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MUROrimuoviLastMuro
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREremoveMuro
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORrimuoviMuro
</UL>

<P><STRONG><a name="[62]"></a>MUROisVertical</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, muro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MUROisVertical
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROorientamento
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROsiSovrappone
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROruotaMuro
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHcheckPosizioneMuro
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHcheckPercorsoGiocatori
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORruotaMuro
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORrimuoviMuro
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviMuro
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORconfermaMuro
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[61]"></a>MUROgetVertice1</STRONG> (Thumb, 6 bytes, Stack size 12 bytes, muro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MUROgetVertice1
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROsiSovrappone
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaMuro
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIcancellaMuro
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORruotaMuro
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORrimuoviMuro
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviMuro
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORconfermaMuro
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[d2]"></a>MUROgetVertice2</STRONG> (Thumb, 6 bytes, Stack size 12 bytes, muro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MUROgetVertice2
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROsiSovrappone
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaMuro
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIcancellaMuro
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORruotaMuro
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviMuro
</UL>

<P><STRONG><a name="[ec]"></a>MUROorientamento</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, muro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MUROorientamento &rArr; MUROisVertical
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROisVertical
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaMuro
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIcancellaMuro
</UL>

<P><STRONG><a name="[f2]"></a>MUROordinaVertici</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, muro.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROruotaMuro
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROeq
</UL>

<P><STRONG><a name="[be]"></a>MUROruotaMuro</STRONG> (Thumb, 102 bytes, Stack size 4 bytes, muro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MUROruotaMuro &rArr; MUROisVertical
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROisVertical
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROordinaVertici
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuroNPC
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORruotaMuro
</UL>

<P><STRONG><a name="[140]"></a>MUROsetV1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, muro.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>MUROsetV2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, muro.o(.text), UNUSED)

<P><STRONG><a name="[f3]"></a>MUROeq</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, muro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MUROeq
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROordinaVertici
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROsiSovrappone
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROmuroPresente
</UL>

<P><STRONG><a name="[60]"></a>MUROgetLastMuro</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, muro.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaMossaExternal
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuroNPC
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORruotaMuro
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORrimuoviMuro
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviMuro
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORconfermaMuro
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORaggiungiMuro
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[d1]"></a>MUROmuroPresente</STRONG> (Thumb, 44 bytes, Stack size 20 bytes, muro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MUROmuroPresente &rArr; MUROeq
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROeq
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROsiSovrappone
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;muroNonPresente
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORruotaMuro
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviMuro
</UL>

<P><STRONG><a name="[9d]"></a>MUROcreaSenzaAggiungere</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, muro.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROsiSovrappone
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHcheckPosizioneMuro
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHcheckPercorsoGiocatori
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORruotaMuro
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviMuro
</UL>

<P><STRONG><a name="[d3]"></a>MUROsiSovrappone</STRONG> (Thumb, 314 bytes, Stack size 60 bytes, muro.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = MUROsiSovrappone &rArr; MUROmuroPresente &rArr; MUROeq
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROmuroPresente
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetVertice2
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROcreaSenzaAggiungere
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROisVertical
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROgetVertice1
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MUROeq
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORruotaMuro
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORmuoviMuro
</UL>

<P><STRONG><a name="[142]"></a>STsearch</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, st.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>STgetVerticeX</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, st.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAcrea
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaQuadrato
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaMuro
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGiocatore
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIcancellaMuro
</UL>

<P><STRONG><a name="[e5]"></a>STgetVerticeY</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, st.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAcrea
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaQuadrato
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaMuro
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIdisegnaGiocatore
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIcancellaMuro
</UL>

<P><STRONG><a name="[a7]"></a>MENUinit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, menu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORinit
</UL>

<P><STRONG><a name="[f4]"></a>MENUdisegnaGiocatoreConCoordinate</STRONG> (Thumb, 578 bytes, Stack size 64 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = MENUdisegnaGiocatoreConCoordinate &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaBTNmenu1
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaBTNmenu2
</UL>

<P><STRONG><a name="[f5]"></a>MENUdisegnaBTNmenu2</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = MENUdisegnaBTNmenu2 &rArr; MENUdisegnaGiocatoreConCoordinate &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Text
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaGiocatoreConCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUsetPosCursore
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaMenuSelBoard
</UL>

<P><STRONG><a name="[f6]"></a>MENUdisegnaBTNmenu1</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = MENUdisegnaBTNmenu1 &rArr; MENUdisegnaGiocatoreConCoordinate &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Text
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaGiocatoreConCoordinate
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUsetPosCursore
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaMenuSelBoard
</UL>

<P><STRONG><a name="[e3]"></a>MENUsetPosCursore</STRONG> (Thumb, 248 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = MENUsetPosCursore &rArr; MENUdisegnaBTNmenu1 &rArr; MENUdisegnaGiocatoreConCoordinate &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaBTNmenu1
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaBTNmenu2
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORupdateBtnMenu
</UL>

<P><STRONG><a name="[d4]"></a>MENUdisegnaMenuSelBoard</STRONG> (Thumb, 274 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = MENUdisegnaMenuSelBoard &rArr; MENUdisegnaBTNmenu1 &rArr; MENUdisegnaGiocatoreConCoordinate &rArr; LCD_DrawLine &rArr; LCD_SetPoint &rArr; LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Text
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaBTNmenu1
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENUdisegnaBTNmenu2
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORsceltaMenu
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORdisegnaMenu
</UL>

<P><STRONG><a name="[f7]"></a>MENUdisegnaQuadratoBTN</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, menu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>

<P><STRONG><a name="[e2]"></a>MENUgetPosCursore</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, menu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORsceltaMenu
</UL>

<P><STRONG><a name="[a8]"></a>MODALITAinit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, modalita.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORreset
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORinit
</UL>

<P><STRONG><a name="[db]"></a>MODALITAsetGameMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modalita.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardHuman
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardNPC
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsHuman
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsNPC
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORsceltaMenu
</UL>

<P><STRONG><a name="[dc]"></a>MODALITAsetPlayerType</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modalita.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardHuman
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardNPC
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsHuman
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsNPC
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORsceltaMenu
</UL>

<P><STRONG><a name="[ca]"></a>MODALITAgetGameMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modalita.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstart
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
</UL>

<P><STRONG><a name="[cb]"></a>MODALITAgetPlayerMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modalita.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstart
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
</UL>

<P><STRONG><a name="[df]"></a>NPCControllerInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, npccontroller.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardNPC
</UL>

<P><STRONG><a name="[b1]"></a>NPCCONTROLLERmossaAvversario</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, npccontroller.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NPCCONTROLLERmossaAvversario
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORswapTurno
</UL>

<P><STRONG><a name="[cc]"></a>NPCCONTROLLERinserireMuro</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, npccontroller.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NPCCONTROLLERinserireMuro
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIOCATOREgetPosizione
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
</UL>

<P><STRONG><a name="[d7]"></a>CANQhandshake</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, canquoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CANQhandshake &rArr; CAN_wrMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_wrMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsHuman
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsNPC
</UL>

<P><STRONG><a name="[143]"></a>CANhandshakeIsConfirmed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canquoridor.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>CANQreadMossa</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, canquoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = CANQreadMossa &rArr; MOSSAcrea_return &rArr; MOSSA_da_posizione_2_XY
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAcrea_return
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_rdMsg
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSA_da_XY_2_posizione
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
</UL>

<P><STRONG><a name="[64]"></a>CANQsendMossa</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, canquoridor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CANQsendMossa &rArr; MOSSAgetPosizione
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAisVerticale
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAisPlayerMode
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAgetPosizione
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSAgetPlayerID
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_wrMsg
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOSSA_da_posizione_2_XY
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORgiocaTurno
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[6a]"></a>CANhandshakeClear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, canquoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[26]"></a>CAN_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, irq_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CAN_IRQHandler &rArr; CAN_rdMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_rdMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[fa]"></a>CAN_setup</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, lib_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CAN_setup &rArr; CAN_cfgBaudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_cfgBaudrate
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Init
</UL>

<P><STRONG><a name="[fe]"></a>CAN_start</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lib_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Init
</UL>

<P><STRONG><a name="[ff]"></a>CAN_waitReady</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lib_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Init
</UL>

<P><STRONG><a name="[f8]"></a>CAN_wrMsg</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, lib_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CAN_wrMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANQhandshake
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANQsendMossa
</UL>

<P><STRONG><a name="[f9]"></a>CAN_rdMsg</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, lib_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CAN_rdMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANQreadMossa
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_IRQHandler
</UL>

<P><STRONG><a name="[fd]"></a>CAN_wrFilter</STRONG> (Thumb, 822 bytes, Stack size 28 bytes, lib_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CAN_wrFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Init
</UL>

<P><STRONG><a name="[4b]"></a>CAN_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lib_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CAN_Init &rArr; CAN_wrFilter
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_wrFilter
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_waitReady
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_start
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_setup
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIstampaTimer
</UL>

<P><STRONG><a name="[101]"></a>__printf</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, __printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[38]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetASCIICode
</UL>

<P><STRONG><a name="[104]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[144]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardHuman
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartSingleBoardNPC
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsHuman
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORstartTwoBoardsNPC
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHcheckPercorsoGiocatori
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[145]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[146]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHisPathExists
</UL>

<P><STRONG><a name="[148]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[14b]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[14c]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[14d]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[100]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[31]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[3a]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[3f]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[14e]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[14f]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4c]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, irq_button.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT2_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT1_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT0_IRQHandler
</UL>

<P><STRONG><a name="[4d]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lib_button.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_init
</UL>

<P><STRONG><a name="[6c]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, irq_rit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RIT_IRQHandler
</UL>

<P><STRONG><a name="[79]"></a>LCD_Configuration</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, glcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Initialization
</UL>

<P><STRONG><a name="[78]"></a>wait_delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, glcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPoint
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Initialization
</UL>

<P><STRONG><a name="[77]"></a>LCD_SetCursor</STRONG> (Thumb, 1356 bytes, Stack size 24 bytes, glcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPoint
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[7a]"></a>delay_ms</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, glcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Initialization
</UL>

<P><STRONG><a name="[7d]"></a>LCD_BGR2RGB</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, glcd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPoint
</UL>

<P><STRONG><a name="[85]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lib_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer
</UL>

<P><STRONG><a name="[86]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lib_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer
</UL>

<P><STRONG><a name="[8d]"></a>EDGEcreate</STRONG> (Thumb, 18 bytes, Stack size 28 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = EDGEcreate
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHrimuoviGiocatore
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHinserisciPerimetro
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHrimuoviPerimetro
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHremoveEdge
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHinsertEdge
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHinserisciGiocatore
</UL>

<P><STRONG><a name="[8e]"></a>insertEdge</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = insertEdge
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHinserisciPerimetro
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHinsertEdge
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHinserisciGiocatore
</UL>

<P><STRONG><a name="[93]"></a>removeEdge</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, graph.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = removeEdge
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHrimuoviGiocatore
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHrimuoviPerimetro
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GRAPHremoveEdge
</UL>

<P><STRONG><a name="[a4]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORabilitaComandiGiocatore
</UL>

<P><STRONG><a name="[c0]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, quoridor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUORIDORdisabilitaComandiGiocatore
</UL>

<P><STRONG><a name="[fb]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lib_can.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_setup
</UL>

<P><STRONG><a name="[fc]"></a>CAN_cfgBaudrate</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, lib_can.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CAN_cfgBaudrate
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_setup
</UL>

<P><STRONG><a name="[32]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
